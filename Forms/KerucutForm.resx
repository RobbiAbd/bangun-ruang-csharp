<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>